name: Publish
on:
  release:
    types: [published]
jobs:
  release:
    name: Release
    strategy:
      matrix:
        dotnet-version: [ '8.0.x' ]
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Build
        shell: bash
        run: |
          # Define some variables for things we need
          tag=$(git describe --tags --abbrev=0)
          release_name="BasicApi-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish BasicApi/BasicApi.csproj --framework net8.0 --runtime "${{ matrix.target }}" -c Release -o "$release_name"

          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          # Delete output directory
          rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "BasicApi-*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run `packer init`
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        id: init
        run: "packer init ./packer/winserver2022dcg2.pkr.hcl"

      - name: Run `packer validate`
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        id: validate
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="BasicApi-$tag-${{ matrix.target }}"
          packer validate -var "appFileZip=${release_name}.zip" ./packer/winserver2022dcg2.pkr.hcl

      - name: Build image
        if: ${{ matrix.os == 'windows-latest' }}
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="BasicApi-$tag-${{ matrix.target }}"
          packer build -var "appFileZip=${release_name}.zip" -color=false -on-error=abort ./packer/winserver2022dcg2.pkr.hcl